@model AdminLTE.Data.Audit

<!DOCTYPE html>
<html>
<head>
    <title>Convert JSON Data to HTML Table</title>
    <style>
        th, td, p, input, h3 {
            font:15px 'Segoe UI';
        }
        table, th, td {
            border: solid 1px #ddd;
            border-collapse: collapse;
            padding: 2px 3px;
            text-align: center;
        }
        th {
            font-weight:bold;
        }
    </style>
</head>
<body>
	<h3>
    	Click the button to create a dynamic table using data extracted from a JSON array.
    </h3>
    <input type='button' onclick='tableFromJson()' 
    	value='Create Table from JSON data' />
        
    <p id='showData'></p>
    
    <p id='msg'></p>



</body>

<script>

    function GetAuditHistory(recordID) {  
    $("#audit").html("");  
  
    var AuditDisplay = "<table class='table table-condensed' cellpadding='5'>";  
    $.getJSON( "/SuperAdmin/Audit/"+ recordID, function( AuditTrail ) {  
  
        for(var i = 0; i < AuditTrail.length; i++ )  
        {  
            AuditDisplay = AuditDisplay + "<tr class='active'><td colspan='2'>Event date: " + AuditTrail[i].DateTimeStamp + "</td>";  
            AuditDisplay = AuditDisplay + "<td>Action type: " + AuditTrail[i].AuditActionTypeName + "</td></tr>";  
            AuditDisplay = AuditDisplay + "<tr class='text-warning'><td>Field name</td><td>Before change</td><td>After change</td></tr>";  
            for(var j = 0; j < AuditTrail[i].Changes.length; j++ )  
            {  
                AuditDisplay = AuditDisplay + "<tr>";  
                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].FieldName + "</td>";  
                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].ValueBefore + "</td>";  
                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].ValueAfter + "</td>";  
                AuditDisplay = AuditDisplay + "</tr>";  
            }  
        }  
        AuditDisplay = AuditDisplay + "</table>">  
  
        $("#audit").html(AuditDisplay);  
        $("#myModal").modal('show');  
  
  
    });  
}  

	// scroll down for ES6 features. 

	// using regular methods.

    function tableFromJson() {
       // alert(@Model.NewValues.ToString();)
		// the json data. (you can change the values for output.)
        var myBooks = [
            {"AccessFailedCount":0,"AvatarURL":"/images\\51ed1743-42c9-481e-8015-36c984747f59_.jpg","ConcurrencyStamp":"094e5255-6013-408a-97de-05da731aa637","DateRegistered":"27/10/2021 01:38:35","Email":"superadmin@admin.com","EmailConfirmed":false,"FirstName":"John","LastName":"O'Shaughnessy","LockoutEnabled":true,"LockoutEnd":null,"NickName":null,"NormalizedEmail":"SUPERADMIN@ADMIN.COM","NormalizedUserName":"SUPERADMIN@ADMIN.COM","PasswordHash":"AQAAAAEAACcQAAAAEMRrlk+9vfVjsCSNT8DREkxcFg4xPkA1W94TlunNLjPPbKUgOzJyCGyre1qKK3uL4g==","PhoneNumber":null,"PhoneNumberConfirmed":false,"Position":"Side","SecurityStamp":"SOWWODF43KS7O5UWQ6AJK5XX4A65XYEF","TwoFactorEnabled":false,"UserName":"superadmin@admin.com"}
        ]
            //    var myBooks = '[' +
            //@Model.NewValues.ToString(); +']'
        // Extract value from table header. 
        // ('Book ID', 'Book Name', 'Category' and 'Price')
        var col = [];
        for (var i = 0; i < myBooks.length; i++) {
            for (var key in myBooks[i]) {
                if (col.indexOf(key) === -1) {
                    col.push(key);
                }
            }
        }

        // Create a table.
        var table = document.createElement("table");

        // Create table header row using the extracted headers above.
        var tr = table.insertRow(-1);                   // table row.

        for (var i = 0; i < col.length; i++) {
            var th = document.createElement("th");      // table header.
            th.innerHTML = col[i];
            tr.appendChild(th);
        }

        // add json data to the table as rows.
        for (var i = 0; i < myBooks.length; i++) {

            tr = table.insertRow(-1);

            for (var j = 0; j < col.length; j++) {
                var tabCell = tr.insertCell(-1);
                tabCell.innerHTML = myBooks[i][col[j]];
            }
        }

        // Now, add the newly created table with json data, to a container.
        var divShowData = document.getElementById('showData');
        divShowData.innerHTML = "";
        divShowData.appendChild(table);
        
        document.getElementById('msg').innerHTML = '<br />You can later <a href="https://www.encodedna.com/javascript/dynamically-add-remove-rows-to-html-table-using-javascript-and-save-data.htm" target="_blank" style="color:#1464f4;text-decoration:none;">get all the data from table and save it in a database.</a>';
    }
    
    
    // using ES6 features.
    
//     let tableFromJson = () => {
//     	// the json data.
//         const myBooks = [
//             {'Book ID': '1', 'Book Name': 'Challenging Times',
//                 'Category': 'Business', 'Price': '125.60'
//             },
//             {'Book ID': '2', 'Book Name': 'Learn JavaScript',
//                 'Category': 'Programming', 'Price': '56.00'
//             },
//             {'Book ID': '3', 'Book Name': 'Popular Science',
//                 'Category': 'Science', 'Price': '210.40'
//             }
//         ]
        
//         // Extract value from table header. 
//         // ('Book ID', 'Book Name', 'Category' and 'Price')
//         let col = [];
//         for (let i = 0; i < myBooks.length; i++) {
//             for (let key in myBooks[i]) {
//                 if (col.indexOf(key) === -1) {
//                     col.push(key);
//                 }
//             }
//         }
        
//         // Create a table.
//         const table = document.createElement("table");

//         // Create table header row using the extracted headers above.
//         let tr = table.insertRow(-1);                   // table row.

//         for (let i = 0; i < col.length; i++) {
//             let th = document.createElement("th");      // table header.
//             th.innerHTML = col[i];
//             tr.appendChild(th);
//         }

//         // add json data to the table as rows.
//         for (let i = 0; i < myBooks.length; i++) {

//             tr = table.insertRow(-1);

//             for (let j = 0; j < col.length; j++) {
//                 let tabCell = tr.insertCell(-1);
//                 tabCell.innerHTML = myBooks[i][col[j]];
//             }
//         }

//         // Now, add the newly created table with json data, to a container.
//         const divShowData = document.getElementById('showData');
//         divShowData.innerHTML = "";
//         divShowData.appendChild(table);
//     }
</script>
</html>
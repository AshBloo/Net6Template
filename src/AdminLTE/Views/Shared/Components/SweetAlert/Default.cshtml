@model IEnumerable<Message>

@foreach (var item in Model)
{

    if (item.DialogType.ToString().ToLower() == "dialog")
    {
        <script>
            $(document).ready(function () {
                Swal.fire({

                      icon: '@item.Type.ToString()',
                      title: '@item.Title',
                      showConfirmButton: true,
                      timerProgressBar: true,
                      allowOutsideClick: false,
                      buttonsStyling: true,
                      timer: 3500,
                      confirmButtonText: '@item.FontAwesomeIcon',
                        footer: '<a href="/SuperAdmin">Goto Page?</a>'
                    })
             });
        </script>
    }
    else if (item.DialogType.ToString().ToLower() == "input")
    {
        <script>
             $(document).ready(function () {
                        (async () => {

            const { value: formValues } = await Swal.fire({
              title: 'Multiple inputs',
              html:
                '<input id="swal-input1" class="swal2-input">' +
                '<input id="swal-input2" class="swal2-input">',
              focusConfirm: false,
              preConfirm: () => {
                return [
                  document.getElementById('swal-input1').value,
                  document.getElementById('swal-input2').value
                ]
              }
            })

            if (formValues) {
              Swal.fire(JSON.stringify(formValues))
            }

            })()
              });
        </script>
    }
    else
    {
        <script>
                            $(document).ready(function () {
            const Toast = Swal.mixin({
              toast: true,
              position: 'bottom-start',
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
              }
            })

            Toast.fire({
              icon: '@item.Type.ToString()',
              title: '@item.Title',
            })
                        });
        </script>
    }

}

